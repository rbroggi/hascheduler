@startuml

skinparam component {
  BackgroundColor<<lib>> LightBlue
  BorderColor<<lib>> DarkBlue
  BackgroundColor<<candidate leader>> Tomato
}


component "Pod/Process 1" as Pod1 <<candidate>> {
  component "Leader Election Client" as Lib1 <<lib>> {
      [Store Client Implementation] as Client1
  }
}

component "Pod/Process 2" as Pod2 <<candidate leader>> {
  component "Leader Election Client" as Lib2 <<lib>> {
      [Store Client Implementation] as Client2
  }
}

component "Pod/Process N" as PodN <<candidate>> {
  component "Leader Election Client" as LibN <<lib>> {
      [Store Client Implementation] as ClientN
  }
}

component "Kubernetes API" as K8sAPI {
  [Leader Election API] as LEAPI
}

database "store" as store {
  [Lease Object] as Lease
  note right of Lease
    HolderIdentity
    LeaseDuration
    AcquireTime
    RenewTime
    LeaderTransitions
  end note
}

Client1 -d-> K8sAPI : Create/Update/Get Lease
Client2 -d-> K8sAPI : Create/Update/Get Lease
ClientN -d-> K8sAPI : Create/Update/Get Lease

K8sAPI <-d-> store : Create/Update/Get Lease

@enduml
